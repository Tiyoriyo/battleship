(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    font-family: monospace;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n    \n    height: 100vh;\n}\n\n.noselect {\n    -webkit-touch-callout: none; /* iOS Safari */\n      -webkit-user-select: none; /* Safari */\n       -khtml-user-select: none; /* Konqueror HTML */\n         -moz-user-select: none; /* Old versions of Firefox */\n          -ms-user-select: none; /* Internet Explorer/Edge */\n              user-select: none; /* Non-prefixed version, currently\n                                    supported by Chrome, Edge, Opera and Firefox */\n}\n\n.boardsContainer {\n    display: flex;\n    align-items: center;\n}\n\n.board {\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    width: 300px;\n    height: 300px;\n    border: 1px solid #a8a8a8;\n}\n\n.column {\n   display: grid; \n}\n\n.square {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid rgb(168, 168, 168, 0.4);\n}\n\n.content {\n    position: absolute;\n    cursor: default;\n    overflow: hidden;\n\n}\n\n.miss {\n    color: grey;\n}\n\n.miss, .expose {\n    background-color: rgb(240, 240, 240);\n}\n\n.hit {\n    font-size: 36px;\n    background-color: rgb(255, 195, 195);\n}\n\n.miss, .expose {\n    font-size: 40px;\n    \n}\n\n.miss, .expose, .hit {\nline-height: 40%;\n}\n\n.overlay {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 48px;\n    text-align: center;\n    color: white;\n    text-shadow: 5px 2px 5px rgb(0, 0, 0, 0.8);\n    flex: auto;\n    width: 300px;\n    height: 300px;\n    z-index: 1;\n    /* background-color: rgb(255, 255, 255, 0.8); */\n    /* filter: blur(); */\n}\n\n.boardSpace1, .boardSpace2 {\n    display: flex;\n    border: 1px solid rgb(229, 229, 229);\n    overflow: hidden;\n}\n\n.blur {\n    filter: blur(5px);\n}\n\n.boardsContainer {\n    display: flex;\n    gap: 50px;\n}\n\n.header {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 25px;\n}\n\n.logo {\n    width: 300px;\n    filter: opacity(0.8);\n}\n\n.buttonHolder {\n    display: flex;\n    gap: 25px;\n    height: 100px ;\n}\n\nbutton {\n    appearance: none;\n    width: 75px;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px rgb(0, 0, 0, 0.2);\n    color: white;\n    font-weight: bold;\n}\n\n\n#plyReset {\n    background-color: rgb(255, 178, 15);\n}\n\n#gamePlay {\n    background-color: rgb(68, 175, 105);\n}\n\n#resButton {\n    background-color:rgb(184, 12, 9);\n}\n\n\n#plyReset:hover {\n    background-color: rgb(251, 189, 54);\n}\n\n#gamePlay:hover {\n    background-color: rgb(101, 185, 130);\n}\n\n#resButton:hover {\n    background-color:rgb(202, 90, 89);\n}\n\n#plyReset:active, #gamePlay:active, #resButton:active {\n    box-shadow: none;\n}\n\n.shipTracker1, .shipTracker2 {\n    display: flex;\n    flex-direction: column;\n    width: 100px;\n    height: 100px;\n    gap: 5px;\n}\n\n.trackRow {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n}\n\n.ship {\n    background-color: red;\n    height: 5px;\n    box-shadow: 2px 2px 0px rgb(216, 216, 216);\n}\n\n.patrol {\n    width: 5px;\n}\n\n.destroyer {\n    width: 10px;\n}\n\n.battleship {\n    width: 15px;\n}\n\n.carrier {\n    width: 20px;\n}\n\n.trackerP {\n    font-size: 10px;\n    text-align: center;\n}\n\n\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;;IAET,aAAa;AACjB;;AAEA;IACI,2BAA2B,EAAE,eAAe;MAC1C,yBAAyB,EAAE,WAAW;OACrC,wBAAwB,EAAE,mBAAmB;SAC3C,sBAAsB,EAAE,4BAA4B;UACnD,qBAAqB,EAAE,2BAA2B;cAC9C,iBAAiB,EAAE;kFACiD;AAClF;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sCAAsC;IACtC,YAAY;IACZ,aAAa;IACb,yBAAyB;AAC7B;;AAEA;GACG,aAAa;AAChB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,yCAAyC;AAC7C;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,gBAAgB;;AAEpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,eAAe;IACf,oCAAoC;AACxC;;AAEA;IACI,eAAe;;AAEnB;;AAEA;AACA,gBAAgB;AAChB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,kBAAkB;IAClB,YAAY;IACZ,0CAA0C;IAC1C,UAAU;IACV,YAAY;IACZ,aAAa;IACb,UAAU;IACV,+CAA+C;IAC/C,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,oCAAoC;IACpC,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,cAAc;AAClB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,yCAAyC;IACzC,YAAY;IACZ,iBAAiB;AACrB;;;AAGA;IACI,mCAAmC;AACvC;;AAEA;IACI,mCAAmC;AACvC;;AAEA;IACI,gCAAgC;AACpC;;;AAGA;IACI,mCAAmC;AACvC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,QAAQ;AACZ;;AAEA;IACI,qBAAqB;IACrB,WAAW;IACX,0CAA0C;AAC9C;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    font-family: monospace;\n}\n\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 50px;\n    \n    height: 100vh;\n}\n\n.noselect {\n    -webkit-touch-callout: none; /* iOS Safari */\n      -webkit-user-select: none; /* Safari */\n       -khtml-user-select: none; /* Konqueror HTML */\n         -moz-user-select: none; /* Old versions of Firefox */\n          -ms-user-select: none; /* Internet Explorer/Edge */\n              user-select: none; /* Non-prefixed version, currently\n                                    supported by Chrome, Edge, Opera and Firefox */\n}\n\n.boardsContainer {\n    display: flex;\n    align-items: center;\n}\n\n.board {\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    width: 300px;\n    height: 300px;\n    border: 1px solid #a8a8a8;\n}\n\n.column {\n   display: grid; \n}\n\n.square {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: 1px solid rgb(168, 168, 168, 0.4);\n}\n\n.content {\n    position: absolute;\n    cursor: default;\n    overflow: hidden;\n\n}\n\n.miss {\n    color: grey;\n}\n\n.miss, .expose {\n    background-color: rgb(240, 240, 240);\n}\n\n.hit {\n    font-size: 36px;\n    background-color: rgb(255, 195, 195);\n}\n\n.miss, .expose {\n    font-size: 40px;\n    \n}\n\n.miss, .expose, .hit {\nline-height: 40%;\n}\n\n.overlay {\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 48px;\n    text-align: center;\n    color: white;\n    text-shadow: 5px 2px 5px rgb(0, 0, 0, 0.8);\n    flex: auto;\n    width: 300px;\n    height: 300px;\n    z-index: 1;\n    /* background-color: rgb(255, 255, 255, 0.8); */\n    /* filter: blur(); */\n}\n\n.boardSpace1, .boardSpace2 {\n    display: flex;\n    border: 1px solid rgb(229, 229, 229);\n    overflow: hidden;\n}\n\n.blur {\n    filter: blur(5px);\n}\n\n.boardsContainer {\n    display: flex;\n    gap: 50px;\n}\n\n.header {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 25px;\n}\n\n.logo {\n    width: 300px;\n    filter: opacity(0.8);\n}\n\n.buttonHolder {\n    display: flex;\n    gap: 25px;\n    height: 100px ;\n}\n\nbutton {\n    appearance: none;\n    width: 75px;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    box-shadow: 2px 2px 5px rgb(0, 0, 0, 0.2);\n    color: white;\n    font-weight: bold;\n}\n\n\n#plyReset {\n    background-color: rgb(255, 178, 15);\n}\n\n#gamePlay {\n    background-color: rgb(68, 175, 105);\n}\n\n#resButton {\n    background-color:rgb(184, 12, 9);\n}\n\n\n#plyReset:hover {\n    background-color: rgb(251, 189, 54);\n}\n\n#gamePlay:hover {\n    background-color: rgb(101, 185, 130);\n}\n\n#resButton:hover {\n    background-color:rgb(202, 90, 89);\n}\n\n#plyReset:active, #gamePlay:active, #resButton:active {\n    box-shadow: none;\n}\n\n.shipTracker1, .shipTracker2 {\n    display: flex;\n    flex-direction: column;\n    width: 100px;\n    height: 100px;\n    gap: 5px;\n}\n\n.trackRow {\n    display: flex;\n    justify-content: center;\n    gap: 5px;\n}\n\n.ship {\n    background-color: red;\n    height: 5px;\n    box-shadow: 2px 2px 0px rgb(216, 216, 216);\n}\n\n.patrol {\n    width: 5px;\n}\n\n.destroyer {\n    width: 10px;\n}\n\n.battleship {\n    width: 15px;\n}\n\n.carrier {\n    width: 20px;\n}\n\n.trackerP {\n    font-size: 10px;\n    text-align: center;\n}\n\n\n\n\n\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],l=a[A]||0,p="".concat(A," ").concat(l);a[A]=l+1;var d=t(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var h=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=n=>{function e(){const n=[];for(let e=0;e<10;e+=1){const e=[];for(let n=0;n<10;n+=1)e[n]={ship:void 0,status:null,shipNearby:!1};n.push(e)}return n}return{name:n,board:e(),activeShips:[],sunkShips:[],shipArsenal:["carrier","battleship","battleship","destroyer","destroyer","destroyer","patrol","patrol","patrol","patrol"],resetBoard:function(){this.board=e()},resetShips:function(){this.activeShips=[],this.sunkShips=[],this.shipArsenal=["carrier","battleship","battleship","destroyer","destroyer","destroyer","patrol","patrol","patrol","patrol"]},reset:function(){this.resetBoard(),this.resetShips()}}},e=n=>n<1||n>5?"Length Error":{name:function(n){switch(n){case 4:return"carrier";case 3:return"battleship";case 2:return"destroyer";case 1:return"patrol"}}(n),length:n,hits:0,head:void 0,tail:void 0,sunk:!1,direction:void 0,damage:function(){this.hits<this.length&&(this.hits+=1,this.isSunk())},isSunk:function(){return this.length===this.hits&&(this.sunk=!0,!0)}},r=t.p+"5e39e719b74a85ed45bb.png";var o=t(379),a=t.n(o),i=t(795),s=t.n(i),c=t(569),A=t.n(c),l=t(565),p=t.n(l),d=t(216),u=t.n(d),h=t(589),f=t.n(h),C=t(426),g={};g.styleTagTransform=f(),g.setAttributes=p(),g.insert=A().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=u(),a()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals,document.querySelector(".logo").src=r;const b=document.querySelector(".boardSpace1"),m=document.querySelector(".boardSpace2"),x=document.querySelector(".buttonHolder"),y=()=>{const n=document.createElement("div"),e=document.createElement("div");return n.classList.add("square","noselect"),e.classList.add("content"),n.appendChild(e),n},I=(n,e,t,r)=>{const o=t;r.board[n][e].ship&&(o.classList.add("active"),o.style.backgroundColor="rgb(184, 12, 9)")},B=(n,e)=>{const t=n;e&&(t.parentElement.style="null",t.innerHTML="&#183;",t.parentElement.classList.add(e))},v=(n,e)=>{const t=n.childNodes[0].childNodes;for(let n=0;n<10;n++)for(let r=0;r<10;r++){const o=t[n].childNodes[r];I(n,r,o,e)}},E=()=>{const n=document.createElement("div");for(let e=0;e<10;e++){const e=document.createElement("div");for(let n=0;n<10;n++)e.appendChild(y());e.classList.add("column"),n.appendChild(e)}return n.classList.add("board"),n},k=(n,e)=>{const t=e.childNodes[0].childNodes;for(let e=0;e<t.length;e++){const r=t[e].childNodes;for(let o=0;o<t.length;o++){const t=r[o].childNodes[0],a=n.board[e][o].status;B(t,a)}}},S=(n,e)=>{const t=[],r=document.querySelector(`.shipTracker${e}`).children;for(let e=0;e<r.length;e++){const o=r[e].children;for(let e=0;e<o.length;e++){const r=o[e];Array.from(r.classList).indexOf(n)>-1&&t.push(r)}}return t},w={carriers:S("carrier",1),battleships:S("battleship",1),destroyers:S("destroyer",1),patrols:S("patrol",1)},L={carriers:S("carrier",2),battleships:S("battleship",2),destroyers:S("destroyer",2),patrols:S("patrol",2)},T=(n,e)=>{("player"===e?w:L)[`${n}s`].pop().style.backgroundColor="rgb(255, 195, 195)"},M=n=>{const e=n.children;for(let n=0;n<e.length;n++){const t=e[n].children;for(let n=0;n<t.length;n++)t[n].style.backgroundColor="red"}},q=(n,e)=>{Object.keys(n).forEach((t=>{let r=t;r=r.slice(0,r.length-1),n[t]=S(r,e)}))},N=(()=>{const t=n("player"),r=n("computer");function o(n){switch(n){case"carrier":return 4;case"battleship":return 3;case"destroyer":return 2;case"patrol":return 1}}function a(n,e,t){let r=n,o=e;switch(t){case"down":o+=1;break;case"right":r+=1}return{aX:r,aY:o}}function i(n,e,t){return!(!t[n]||!t[n][e])}function s(n,e,t){let r;switch(t){case"all":r=[[n-1,e-1],[n,e-1],[n+1,e-1],[n+1,e],[n+1,e+1],[n,e+1],[n-1,e+1],[n-1,e]];break;case"firstHit":r=[[n-1,e-1],[n+1,e-1],[n+1,e+1],[n-1,e+1]];break;case"secondHitDown":r=[[n-1,e-1],[n+1,e-1],[n+1,e],[n+1,e+1],[n-1,e+1],[n-1,e]];break;case"secondHitRight":r=[[n-1,e-1],[n,e-1],[n+1,e-1],[n+1,e+1],[n,e+1],[n-1,e+1]]}return r}function c(n,e,t,r,o){if(!function(n,e,t,r,o){let i=e,s=t;for(let e=0;e<n.length;e+=1){if(i>9||i<0||s>9||s<0)return!1;if(o[i][s].shipNearby||o[i][s].ship)return!1;i=a(i,s,r).aX,s=a(i,s,r).aY}return!0}(o,n,e,t,r.board))return"Error: Cannot place ship";if(!function(n,e){const t=e.name;return n.shipArsenal.indexOf(t)>-1}(r,o))return"Error: Unavailable ship";let c=n,A=e;const{board:l}=r;o.direction=t;for(let n=0;n<o.length;n+=1){0===n&&(o.head=[c,A]),n===o.length-1&&(o.tail=[c,A]),l[c][A].ship=o;const e=s(c,A,"all");for(let n=0;n<e.length;n+=1){const t=e[n][0],r=e[n][1];i(t,r,l)&&(l[t][r].shipNearby=!0)}c=a(c,A,t).aX,A=a(c,A,t).aY}return function(n,e){const t=n.shipArsenal.indexOf(e.name);n.shipArsenal.splice(t,1),n.activeShips.push(e.name)}(r,o),!0}function A(n,e,t,r){const{board:o}=t;let a;1!==r.hits||r.isSunk()?r.isSunk()?a=s(n,e,"all"):r.hits>1&&"down"===r.direction?a=s(n,e,"secondHitDown"):r.hits>1&&"right"===r.direction&&(a=s(n,e,"secondHitRight")):a=s(n,e,"firstHit");for(let n=0;n<a.length;n+=1){const e=a[n][0],r=a[n][1];i(e,r,t.board)&&(o[e][r].status||o[e][r].ship||(o[e][r].status="expose"))}}function l(n,e){return 0===n.activeShips.length?"computer":0===e.activeShips.length?"player":null}function p(n,e,o){if(!i(n,e,o.board))return"Error: Attack is not within bounds";if(o.board[n][e].status)return"Error: Square is used";const a=o.board[n][e];return a.ship?(a.status="hit",a.ship.damage(),function(n,e){if(!0===e.isSunk()){const t=n.activeShips.indexOf(e.name);n.activeShips.splice(t,1),n.sunkShips.push(e.name)}}(o,a.ship),a.ship.isSunk()&&(A(a.ship.head[0],a.ship.head[1],o,a.ship),A(a.ship.tail[0],a.ship.tail[1],o,a.ship)),A(n,e,o,a.ship),l(t,r),!0):(a.status,a.status="miss",!1)}function d(n){let e=0;const{board:t}=n;for(let n=0;n<t.length;n+=1)for(let r=0;r<t[n].length;r+=1)t[n][r].status||(e+=1);return e}return{player:t,computer:r,placeShip:c,attack:p,shipSetup:function(n){const t=["right","down"];for(;10!==n.activeShips.length;){const r=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),i=t[Math.floor(2*Math.random())],s=o(n.shipArsenal[0]);c(r,a,i,n,e(s))}},getFreeSquares:d,computerAttack:function(){const n=d(this.player);for(;d(this.player)===n;){const n=Math.floor(10*Math.random()),e=Math.floor(10*Math.random());if(!this.player.board[n][e].status)return p(n,e,this.player),{x:n,y:e}}},checkWinner:l,reset:function(){this.player=n("player"),this.computer=n("computer")}}})(),{player:j}=N,{computer:H}=N,O=document.querySelector(".boardSpace1"),R=document.querySelector(".boardSpace2"),Y=document.querySelector(".buttonHolder"),P=n=>{if("content"===n.target.className)return;const e=n.target.parentElement,t=[...e.parentElement.childNodes],r=[...e.childNodes],o=t.indexOf(e),a=r.indexOf(n.target);D(o,a,H,N)},W=n=>{const e=R.childNodes[0].childNodes;for(let t=0;t<e.length;t++){const r=e[t].childNodes;for(let t=0;t<e.length;t++)"add"===n?r[t].addEventListener("click",P):"remove"===n&&r[t].removeEventListener("click",P)}},Z=()=>{Y.innerHTML="",W("add")},U=()=>{const n=document.querySelector("#plyReset"),e=document.querySelector("#gamePlay");n.addEventListener("click",(()=>{((n,e,t)=>{n.reset(),t.shipSetup(n);const r=e;r.innerHTML="",r.append(E()),v(e,n)})(j,O,N)})),e.addEventListener("click",Z)},z=()=>{j.reset(),H.reset(),O.innerHTML="",R.innerHTML="",O.append(E()),R.append(E()),N.shipSetup(j),N.shipSetup(H),v(O,j),(()=>{const n=document.querySelector(".shipTracker1"),e=document.querySelector(".shipTracker2");M(n),M(e),q(w,1),q(L,2)})(),(()=>{x.innerHTML="";const n=document.createElement("button"),e=document.createElement("button");n.id="plyReset",e.id="gamePlay",n.textContent="Reset",e.textContent="Play",x.append(n,e)})(),U()},F=()=>{const n=N.checkWinner(j,H);return!!n&&((n=>{W("remove"),(n=>{const e=document.createElement("div"),t=document.createElement("div");e.classList.add("overlay"),t.classList.add("overlay"),e.textContent="player"===n?"Computer Loses":"Computer Wins",t.textContent="player"===n?"Player Wins":"Player Loses",b.append(e),m.append(t),b.childNodes[0].classList.add("blur"),m.childNodes[0].classList.add("blur");const r=document.createElement("button");r.id="resButton",r.textContent="Restart",x.append(r)})(n),document.querySelector("#resButton").addEventListener("click",z)})(n),!0)},D=(n,e,t)=>{if("Error: Square is used"===N.attack(n,e,t))return;const r="player"===t.name?O:R;W("remove"),k(t,r);const{ship:o}=t.board[n][e];o&&o.isSunk()&&T(t.board[n][e].ship.name,t.name),F()||setTimeout((()=>{(()=>{const n=N.computerAttack(),{x:e}=n,{y:t}=n,{ship:r}=j.board[e][t];r&&r.isSunk()&&T(j.board[e][t].ship.name,j.name),k(j,O),W("add"),F()})()}),500)};window.onload=(N.shipSetup(j),N.shipSetup(H),O.appendChild(E()),R.appendChild(E()),U(),void v(O,j))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,